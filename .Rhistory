labs(title = 'US Gasoline Costs throughout Time',
x = 'Month',
y = 'Price')
ggsave('Gas Cost per time - Scatterplot.png', width = 10, height = 6)
gas.df %>%
group_by(year, month) %>%
summarise(price = mean(price)) %>%
filter(year > 2008) %>%
ggplot(aes(month, price)) +
geom_col(aes(color = airbnb_red), show.legend = FALSE) +
# geom_smooth(aes(color = airbnb_green), show.legend = FALSE, se = FALSE) +
theme_few() +
facet_grid(. ~ year) +
scale_x_continuous(breaks = c(3, 6, 9)) +
labs(title = 'US Gasoline Costs throughout Time',
x = 'Month',
y = 'Price')
reviews.df %>%
ggplot(aes(month)) +
geom_bar(aes(fill = airbnb_red), show.legend = FALSE) +
scale_x_continuous(breaks = c(1:12)) +
scale_y_continuous(breaks = c(0, 2.5e5, 5e5, 7.5e5, 1e6),
labels = c(0, '250K', '500K', '750K', '1M')) +
theme_few() +
facet_grid(. ~ city) +
labs(title = 'Seasonal Nightly Costs',
x = 'Month',
y = 'Count')
reviews.df %>%
ggplot(aes(month)) +
geom_bar(aes(fill = airbnb_red), show.legend = FALSE) +
scale_x_continuous(breaks = c(1:12)) +
scale_y_continuous(breaks = c(0, 2.5e5, 5e5, 7.5e5, 1e6),
labels = c(0, '250K', '500K', '750K', '1M')) +
theme_few() +
labs(title = 'Seasonal Nightly Costs',
x = 'Month',
y = 'Count')
reviews.df %>%
# group_by(year, accommodates) %>%
# summarise(count = n()) %>%
ggplot(aes(accommodates, year)) +
geom_col(aes(color = airbnb_red), show.legend = FALSE,
position = 'stat') +
facet_grid(. ~ year, scales = 'free') +
scale_x_continuous(breaks = c(3, 6, 9),
limits = c(0, 10)) +
scale_y_continuous(breaks = c(0, 2e5, 4e5, 6e5),
labels = c(0, '200K', '400K', '600K')) +
theme_few() +
labs(title = 'Accommodation Requests',
x = 'Number of Guests',
y = 'Count')
reviews.df %>%
# group_by(year, accommodates) %>%
# summarise(count = n()) %>%
ggplot(aes(accommodates, year)) +
geom_col(aes(color = airbnb_red), show.legend = FALSE,
position = 'stack') +
facet_grid(. ~ year, scales = 'free') +
scale_x_continuous(breaks = c(3, 6, 9),
limits = c(0, 10)) +
scale_y_continuous(breaks = c(0, 2e5, 4e5, 6e5),
labels = c(0, '200K', '400K', '600K')) +
theme_few() +
labs(title = 'Accommodation Requests',
x = 'Number of Guests',
y = 'Count')
reviews.df %>%
group_by(month, year) %>%
summarise(count = n()) %>%
arrange(desc(count), year) %>%
summarise(first(year, count))
gas.df %>%
group_by(year, month) %>%
summarise(price = mean(price)) %>%
filter(year > 2008)
reviews.df %>%
group_by(year, month) %>%
summarise(price = mean(price)) %>%
ggplot(aes(month, price)) +
geom_point(aes(color = airbnb_red), show.legend = FALSE) +
geom_smooth(aes(color = airbnb_green), show.legend = FALSE, se = FALSE) +
theme_few() +
facet_grid(. ~ year) +
scale_y_continuous(breaks = c(50, 150, 250),
labels = c('$50', '$150', '$250')) +
scale_x_continuous(breaks = c(3, 6, 9)) +
labs(title = 'Average AirBNB costs throughout time',
x = 'Month',
y = 'Price')
ggsave('Cost per time - Scatterplot.png', width = 10, height = 6)
reviews.df %>%
group_by(year, month) %>%
summarise(price = mean(price)) %>%
ggplot(aes(month, price)) +
geom_col(aes(color = airbnb_red), show.legend = FALSE) +
# geom_smooth(aes(color = airbnb_green), show.legend = FALSE, se = FALSE) +
theme_few() +
facet_grid(. ~ year) +
scale_y_continuous(breaks = c(50, 150, 250),
labels = c('$50', '$150', '$250')) +
scale_x_continuous(breaks = c(3, 6, 9)) +
labs(title = 'Average AirBNB costs throughout time',
x = 'Month',
y = 'Price')
reviews.df %>%
group_by(year, month) %>%
summarise(price = mean(price)) %>%
ggplot(aes(month, price)) +
geom_point(aes(color = airbnb_red), show.legend = FALSE) +
geom_smooth(aes(color = airbnb_green), show.legend = FALSE, se = FALSE) +
theme_few() +
facet_grid(. ~ year) +
scale_y_continuous(breaks = c(50, 150, 250),
labels = c('$50', '$150', '$250')) +
scale_x_continuous(breaks = c(3, 6, 9)) +
labs(title = 'Average AirBNB costs throughout time',
x = 'Month',
y = 'Price')
ggsave('Cost per time - Scatterplot.png', width = 10, height = 6)
reviews.df %>%
group_by(quarter, year) %>%
summarise(price = mean(price)) %>%
ggplot(aes(year, price)) +
geom_point(aes(color = airbnb_red), show.legend = FALSE) +
facet_grid(. ~ quarter) +
theme_few()
reviews.df %>%
group_by(year, month) %>%
summarise(price = median(price)) %>%
ggplot(aes(month, price)) +
geom_point(aes(color = airbnb_red), show.legend = FALSE) +
geom_smooth(aes(color = airbnb_green), show.legend = FALSE, se = FALSE) +
theme_few() +
facet_grid(. ~ year) +
scale_y_continuous(breaks = c(50, 150, 250),
labels = c('$50', '$150', '$250')) +
scale_x_continuous(breaks = c(3, 6, 9)) +
labs(title = 'Average AirBNB costs throughout time',
x = 'Month',
y = 'Price')
reviews.df %>%
group_by(year, month) %>%
summarise(price = mean(price)) %>%
ggplot(aes(month, price)) +
geom_point(aes(color = airbnb_red), show.legend = FALSE) +
geom_smooth(aes(color = airbnb_green), show.legend = FALSE, se = FALSE) +
theme_few() +
facet_grid(. ~ year) +
scale_y_continuous(breaks = c(50, 150, 250),
labels = c('$50', '$150', '$250')) +
scale_x_continuous(breaks = c(3, 6, 9)) +
labs(title = 'Average AirBNB costs throughout time',
x = 'Month',
y = 'Price')
listings.df %>%
na.omit(host_since) %>%
mutate(host_since = year(host_since)) %>%
ggplot(aes(host_since, number_of_reviews)) +
geom_col(aes(fill = airbnb_red), show.legend = FALSE) +
# facet_wrap(. ~ state, scales = 'free') +
theme_few() +
scale_x_continuous(breaks = c(2008:2022)) +
scale_y_continuous(breaks = c(0, 1.25e5, 2.5e5),
labels = c(0, '125K', '250K')) +
labs(title = 'Competition among AirBNB Hosts',
x = 'Year',
y = 'New Hosts')
reviews.df %>%
ggplot(aes(year)) +
geom_bar(aes(fill = airbnb_red), show.legend = FALSE) +
theme_few() +
scale_x_continuous(breaks = c(2009:2022)) +
scale_y_continuous(breaks = c(0, 5e5, 1e6, 1.5e6, 2e6),
labels = c(0, '500K', '1M', '1.5M', '2M')) +
labs(title = 'Consumer Travel by Year',
x = 'Year',
y = 'Reviews',
color = FALSE)
ggsave('Travel by Year - Barplot.png', width = 10, height = 6)
# removing columns we don't need
listings.df = raw_listings.df %>%
select(-c(2:5, 9, 11, 20:23, 31:32, 44:47, 50, 52:54, 56, 58:59, 69, 71:74))
#removing na from selected columns
listings.df = listings.df %>%
drop_na(c(description, host_since, bedrooms, beds, bathrooms_text))
#making df readable and easy to analyze
listings.df = listings.df %>%
mutate(across(c(price, host_acceptance_rate, host_response_rate,
host_response_time), ~ gsub(',|\\$|%|N/A', '', .)),
bathrooms = ifelse(grepl('half-bath', bathrooms_text),
0.5, gsub('[^0-9.]', '',bathrooms_text)),
across(c(review_scores_rating, review_scores_accuracy,
review_scores_cleanliness, review_scores_checkin,
review_scores_communication, review_scores_location,
review_scores_value, reviews_per_month, accommodates,
bedrooms, beds, minimum_nights, maximum_nights,
minimum_nights_avg_ntm, maximum_nights_avg_ntm, price,
number_of_reviews, host_total_listings_count, bathrooms,
price, host_acceptance_rate, host_response_rate,
availability_365), as.numeric),
across(c(description, host_about), ~ str_count(., '\\s+') + 1),
across(c(host_since, last_review), ~
parse_date_time(., c('ymd', 'mdy'))),
title_len = str_length(name),
num_hosts = str_count(host_name, 'and|And|\\&') + 1,
amenities_count = str_count(amenities, '"') / 2,
num_verification = str_count(host_verifications, "'") / 2,
bathrooms_text = ifelse(grepl('hared', bathrooms_text),
'shared', 'private'),
across(c(host_response_time, bathrooms_text, property_type,
room_type), factor),
across(c(instant_bookable, host_has_profile_pic,
host_identity_verified, host_is_superhost), as.logical))
# removing additional null values
listings.df = listings.df %>%
filter(!price == 0)
# and outliers
var_ = listings.df$price
quartiles = quantile(var_, probs=c(0.25, 0.75))
iqr = IQR(var_)
lower = quartiles[1] - 1.5 * iqr
upper = quartiles[2] + 1.5 * iqr
listings.df = subset(listings.df, var_ > lower & var_ < upper)
# making date as_date format
# also adding additional columns: month, year, quarter
reviews.df = raw_reviews.df %>%
group_by(date) %>%
mutate(date = ymd(date),
month = month(date),
year = year(date),
quarter = case_when(month %in% c(1:3) ~ 'Q1',
month %in% c(4:6) ~ 'Q2',
month %in% c(7:9) ~ 'Q3',
month %in% c(10:12) ~ 'Q4'))
# merging price with columns and roomtype
reviews.df = listings.df %>%
select(id, price, room_type, accommodates, bathrooms, bedrooms, beds, host_since) %>%
mutate(price = as.integer(gsub(',|\\$|%|N/A', '', price))) %>%
merge(., reviews.df, by.x = 'id',
by.y = 'listing_id') %>%
distinct()
reviews.df %>%
group_by(year, month) %>%
summarise(price = mean(price)) %>%
ggplot(aes(month, price)) +
geom_point(aes(color = airbnb_red), show.legend = FALSE) +
geom_smooth(aes(color = airbnb_green), show.legend = FALSE, se = FALSE) +
theme_few() +
facet_grid(. ~ year) +
scale_y_continuous(breaks = c(50, 150, 250),
labels = c('$50', '$150', '$250')) +
scale_x_continuous(breaks = c(3, 6, 9)) +
labs(title = 'Average AirBNB costs throughout time',
x = 'Month',
y = 'Price')
ggsave('Cost per time - Scatterplot.png', width = 10, height = 6)
# removing columns we don't need
listings.df = raw_listings.df %>%
select(-c(2:5, 9, 11, 20:23, 31:32, 44:47, 50, 52:54, 56, 58:59, 69, 71:74))
#removing na from selected columns
listings.df = listings.df %>%
drop_na(c(description, host_since, bedrooms, beds, bathrooms_text))
#making df readable and easy to analyze
listings.df = listings.df %>%
mutate(across(c(price, host_acceptance_rate, host_response_rate,
host_response_time), ~ gsub(',|\\$|%|N/A', '', .)),
bathrooms = ifelse(grepl('half-bath', bathrooms_text),
0.5, gsub('[^0-9.]', '',bathrooms_text)),
across(c(review_scores_rating, review_scores_accuracy,
review_scores_cleanliness, review_scores_checkin,
review_scores_communication, review_scores_location,
review_scores_value, reviews_per_month, accommodates,
bedrooms, beds, minimum_nights, maximum_nights,
minimum_nights_avg_ntm, maximum_nights_avg_ntm, price,
number_of_reviews, host_total_listings_count, bathrooms,
price, host_acceptance_rate, host_response_rate,
availability_365), as.numeric),
across(c(description, host_about), ~ str_count(., '\\s+') + 1),
across(c(host_since, last_review), ~
parse_date_time(., c('ymd', 'dmy', 'mdy'))),
title_len = str_length(name),
num_hosts = str_count(host_name, 'and|And|\\&') + 1,
amenities_count = str_count(amenities, '"') / 2,
num_verification = str_count(host_verifications, "'") / 2,
bathrooms_text = ifelse(grepl('hared', bathrooms_text),
'shared', 'private'),
across(c(host_response_time, bathrooms_text, property_type,
room_type), factor),
across(c(instant_bookable, host_has_profile_pic,
host_identity_verified, host_is_superhost), as.logical))
# removing additional null values
listings.df = listings.df %>%
filter(!price == 0)
# and outliers
var_ = listings.df$price
quartiles = quantile(var_, probs=c(0.25, 0.75))
iqr = IQR(var_)
lower = quartiles[1] - 1.5 * iqr
upper = quartiles[2] + 1.5 * iqr
listings.df = subset(listings.df, var_ > lower & var_ < upper)
# making date as_date format
# also adding additional columns: month, year, quarter
reviews.df = raw_reviews.df %>%
group_by(date) %>%
mutate(date = ymd(date),
month = month(date),
year = year(date),
quarter = case_when(month %in% c(1:3) ~ 'Q1',
month %in% c(4:6) ~ 'Q2',
month %in% c(7:9) ~ 'Q3',
month %in% c(10:12) ~ 'Q4'))
# merging price with columns and roomtype
reviews.df = listings.df %>%
select(id, price, room_type, accommodates, bathrooms, bedrooms, beds, host_since) %>%
mutate(price = as.integer(gsub(',|\\$|%|N/A', '', price))) %>%
merge(., reviews.df, by.x = 'id',
by.y = 'listing_id') %>%
distinct()
df = reviews.df %>%
group_by(year) %>%
transmute(total_count = n(),
accommodates = accommodates) %>%
group_by(year, accommodates) %>%
filter(accommodates <= 10) %>%
summarise(pct = 100 * (round(n() / total_count, 4))) %>%
distinct()
df %>%
mutate(year = as.character(year)) %>%
filter(!year == 2009) %>%
ggplot(aes(accommodates, pct)) +
geom_smooth(aes(color = year), se = FALSE) +
scale_x_continuous(breaks = c(1:5),
limits = c(1, 5)) +
scale_y_continuous(breaks = c(0, 25, 50),
labels = c(0, '25%', '50%')) +
theme_few() +
labs(title = 'Accommodation Requests',
x = 'Accommodations',
y = 'Percent')
ggsave('Accommodation Requests - SmoothPlot.png', width = 10, height = 6)
df = reviews.df %>%
group_by(year) %>%
transmute(total_count = n(),
accommodates = accommodates) %>%
group_by(year, accommodates) %>%
filter(accommodates <= 10) %>%
summarise(pct = 100 * (round(n() / total_count, 4))) %>%
distinct()
df
# look at compression nights
listings.df %>%
na.omit(host_since) %>%
mutate(host_since = month(host_since)) %>%
ggplot(aes(host_since, number_of_reviews)) +
geom_col(aes(fill = airbnb_red), show.legend = FALSE) +
facet_wrap(. ~ state, scales = 'free') +
theme_few() +
scale_x_continuous(breaks = c(2008:2022)) +
scale_y_continuous(breaks = c(0, 1.25e5, 2.5e5),
labels = c(0, '125K', '250K')) +
labs(title = 'Competition among AirBNB Hosts',
x = 'Year',
y = 'New Hosts')
ggsave('Host Competition - Barplot.png', width = 10, height = 6)
# look at compression nights
listings.df %>%
na.omit(host_since) %>%
mutate(host_since = month(host_since)) %>%
ggplot(aes(host_since, number_of_reviews)) +
geom_col(aes(fill = airbnb_red), show.legend = FALSE) +
facet_grid(. ~ state, scales = 'free') +
theme_few() +
scale_x_continuous(breaks = c(2008:2022)) +
scale_y_continuous(breaks = c(0, 1.25e5, 2.5e5),
labels = c(0, '125K', '250K')) +
labs(title = 'Competition among AirBNB Hosts',
x = 'Year',
y = 'New Hosts')
# look at compression nights
listings.df %>%
na.omit(host_since) %>%
mutate(host_since = month(host_since)) %>%
ggplot(aes(host_since, number_of_reviews)) +
geom_col(aes(fill = airbnb_red), show.legend = FALSE) +
facet_wrap(. ~ state, scales = 'free') +
theme_few() +
scale_x_continuous(breaks = c(2008:2022)) +
scale_y_continuous(breaks = c(0, 1.25e5, 2.5e5),
labels = c(0, '125K', '250K')) +
labs(title = 'Competition among AirBNB Hosts',
x = 'Year',
y = 'New Hosts')
ggsave('Host Competition - Barplot.png', width = 10, height = 6)
# look at compression nights
listings.df %>%
na.omit(host_since) %>%
mutate(host_since = month(host_since)) %>%
ggplot(aes(host_since, number_of_reviews)) +
geom_col(aes(fill = airbnb_red), show.legend = FALSE) +
# facet_wrap(. ~ state, scales = 'free') +
theme_few() +
scale_x_continuous(breaks = c(2008:2022)) +
scale_y_continuous(breaks = c(0, 1.25e5, 2.5e5),
labels = c(0, '125K', '250K')) +
labs(title = 'Competition among AirBNB Hosts',
x = 'Year',
y = 'New Hosts')
ggsave('Host Competition - Barplot.png', width = 10, height = 6)
listings.df %>%
na.omit(host_since) %>%
mutate(host_since = year(host_since)) %>%
ggplot(aes(host_since, number_of_reviews)) +
geom_col(aes(fill = airbnb_red), show.legend = FALSE) +
# facet_wrap(. ~ state, scales = 'free') +
theme_few() +
scale_x_continuous(breaks = c(2008:2022)) +
scale_y_continuous(breaks = c(0, 1.25e5, 2.5e5),
labels = c(0, '125K', '250K')) +
labs(title = 'Competition among AirBNB Hosts',
x = 'Year',
y = 'New Hosts')
ggsave('Host Competition - Barplot.png', width = 10, height = 6)
# look at compression nights
listings.df %>%
na.omit(host_since) %>%
mutate(host_since = month(host_since)) %>%
ggplot(aes(host_since, number_of_reviews)) +
geom_col(aes(fill = airbnb_red), show.legend = FALSE) +
# facet_wrap(. ~ state, scales = 'free') +
theme_few() +
scale_x_continuous(breaks = c(1:12)) +
scale_y_continuous(breaks = c(0, 1.25e5, 2.5e5),
labels = c(0, '125K', '250K')) +
labs(title = 'Competition among AirBNB Hosts',
x = 'Month',
y = 'New Hosts')
ggsave('Host Competition Month - Barplot.png', width = 10, height = 6)
# look at compression nights
listings.df %>%
na.omit(host_since) %>%
mutate(host_since = month(host_since)) %>%
ggplot(aes(host_since, number_of_reviews)) +
geom_col(aes(fill = airbnb_red), show.legend = FALSE) +
# facet_wrap(. ~ state, scales = 'free') +
theme_few() +
scale_x_continuous(breaks = c(1:12)) +
scale_y_continuous(breaks = c(0, 2e5),
labels = c(0, '200K')) +
labs(title = 'Competition among AirBNB Hosts',
x = 'Month',
y = 'New Hosts')
ggsave('Host Competition Month - Barplot.png', width = 10, height = 6)
# look at compression nights
listings.df %>%
na.omit(host_since) %>%
mutate(host_since = month(host_since)) %>%
ggplot(aes(host_since, number_of_reviews)) +
geom_col(aes(fill = airbnb_red), show.legend = FALSE) +
# facet_wrap(. ~ state, scales = 'free') +
theme_few() +
scale_x_continuous(breaks = c(1:12)) +
scale_y_continuous(breaks = c(0, 1.75e5),
labels = c(0, '200K')) +
labs(title = 'Competition among AirBNB Hosts',
x = 'Month',
y = 'New Hosts')
# look at compression nights
listings.df %>%
na.omit(host_since) %>%
mutate(host_since = month(host_since)) %>%
ggplot(aes(host_since, number_of_reviews)) +
geom_col(aes(fill = airbnb_red), show.legend = FALSE) +
# facet_wrap(. ~ state, scales = 'free') +
theme_few() +
scale_x_continuous(breaks = c(1:12)) +
scale_y_continuous(breaks = c(0, 1.50e5),
labels = c(0, '200K')) +
labs(title = 'Competition among AirBNB Hosts',
x = 'Month',
y = 'New Hosts')
# look at compression nights
listings.df %>%
na.omit(host_since) %>%
mutate(host_since = month(host_since)) %>%
ggplot(aes(host_since, number_of_reviews)) +
geom_col(aes(fill = airbnb_red), show.legend = FALSE) +
# facet_wrap(. ~ state, scales = 'free') +
theme_few() +
scale_x_continuous(breaks = c(1:12)) +
scale_y_continuous(breaks = c(0, 7.5e4, 1.50e5),
labels = c(0, '75K', '150K')) +
labs(title = 'Competition among AirBNB Hosts',
x = 'Month',
y = 'New Hosts')
ggsave('Host Competition Month - Barplot.png', width = 10, height = 6)
# look at compression nights
listings.df %>%
na.omit(host_since) %>%
mutate(host_since = month(host_since)) %>%
ggplot(aes(host_since, number_of_reviews)) +
geom_col(aes(fill = airbnb_red), show.legend = FALSE) +
geom_smooth() +
# facet_wrap(. ~ state, scales = 'free') +
theme_few() +
scale_x_continuous(breaks = c(1:12)) +
scale_y_continuous(breaks = c(0, 7.5e4, 1.50e5),
labels = c(0, '75K', '150K')) +
labs(title = 'Competition among AirBNB Hosts',
x = 'Month',
y = 'New Hosts')
